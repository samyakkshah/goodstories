import random
import json
import io
from PIL import Image
from image_generator.tester import ComfyClient

def generate_and_upload_cover_image_to_supabase(
    prompt_text: str,
    supabase_client,
    bucket_name: str,
    story_id: str,
    workflow_file: str = "workflow.json",
    server: str = "127.0.0.1:8000"
) -> str:
    """
    Generates a single cover image for the given prompt,
    uploads it to Supabase Storage, and returns the public URL.
    """

    # Load workflow template
    with open(workflow_file, "r", encoding="utf-8") as f:
        workflow = json.load(f)

    # Customize prompt and seed
    workflow["4"]["inputs"]["text"] = f"""
    {prompt_text}

    Leave the top area with less content for text integration.
    """
    workflow["10"]["inputs"]["text"] = "nudity, nsfw, bad anatomy, extra limbs, bad hands, malformed hands, poorly drawn hands, poorly drawn feet, missing fingers, extra fingers, fused fingers, bad feet, deformed, disfigured, low quality, bad proportions, text, watermark, signature, error, jpeg artifacts, worst quality, lowres, low resolution"
    seed = random.randint(1, 1_000_000_000)

    workflow["3"]["inputs"]["seed"] = seed

    # Generate images from Comfy
    client = ComfyClient(server)
    images_by_node = client.generate_images(workflow)

    # We'll only take the first image generated
    first_image_bytes = None
    for image_list in images_by_node.values():
        if image_list:
            first_image_bytes = image_list[0]
            break

    if first_image_bytes is None:
        raise Exception("No image was generated by ComfyUI")

    # Convert to PNG in memory
    img = Image.open(io.BytesIO(first_image_bytes))
    img_buffer = io.BytesIO()
    img.save(img_buffer, format="PNG")
    img_buffer.seek(0)

    # Define path in Supabase bucket
    storage_path = f"{story_id}/cover-{seed}.png"

    # Upload to Supabase Storage
    supabase_client.storage.from_(bucket_name).upload(
        path=storage_path,
        file=img_buffer.getvalue(),
        file_options={"content-type": "image/png"},
    )

    # Get the public URL
    public_url = supabase_client.storage.from_(bucket_name).get_public_url(storage_path)

    return public_url
